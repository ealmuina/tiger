let
	type linked_list = { node : int, next : linked_list }
	var list := linked_list { node = -1, next = nil }
	var head := list
	var it : linked_list := nil
	var n:= 0
	
	function read_int() : int =
		let 
			var i := 0
			var buffer := getline()
			
			function is_digit(s : string) : int = 
				ord(buffer)>=ord("0") & ord(buffer)<=ord("9")
			
			function skipto() =
				while buffer=" " | buffer="\n" | buffer=""
				do buffer := getline()
		in 
				skipto();
				while is_digit(buffer)
				do (
					i := i*10+ord(buffer)-ord("0"); 
					buffer := getline()
				);
				i
		end
	
in
	n:= read_int();
	while n <> 16 do
	(
		list.next:= linked_list { node = n, next = nil };
		list:= list.next;
		n:= read_int()
	);
	it:= head.next;
	while it <> nil do
	(
		printi(it.node);
		print("\n");
		it:= it.next
	)
end
